Class Variable============

class Customer
  @@no_of_customers=0
  def initialize(id, name, addr)
    @cust_id=id
    @cust_name=name
    @cust_addr=addr
    @@no_of_customers += 1
  end
  def display_details()
    puts "Customer id #@cust_id"
    puts "Customer name #@cust_name"
    puts "Customer address #@cust_addr"
  end
  def total_no_of_customers()
    puts "Total number of customers: #@@no_of_customers"
  end
end

# Create Objects
cust1=Customer.new("1", "John", "Wisdom Apartments, Ludhiya")
# cust2=Customer.new("2", "Poul", "New Empire road, Khandala")

# Call Methods
cust1.total_no_of_customers()
# cust2.total_no_of_customers()
cust1.display_details()

constants =============
constant use korle initialize korte hoi na..
class Example
  VAR1 = 100
  VAR2 = 200
  def show
    puts "Value of first Constant is #{VAR1}"
    puts "Value of second Constant is #{VAR2}"
  end
end

# Create Objects
object=Example.new()
object.show

===========some special variable
self,true,false,nil,__FILE__
__LINE__
self: The receiver object of the current method.

true: Value representing true.

false: Value representing false.

nil: Value representing undefined.

__FILE__: The name of the current source file.

__LINE__: The current line number in the source file
ary = [  "fred", 10, 3.14, "This is a string", "last element", ]
ary.each do |i|
  puts i
end
======Array=====
ary = [  "fred", 10, 3.14, "This is a string", "last element"]
ary.each do |i|
  puts i
end


Hash value
hsh = colors = { "red" => 0xf00, "green" => 0x0f0, "blue" => 0x00f }
hsh.each do |key, value|
  print key, " is ", value, "\n\n"
end
